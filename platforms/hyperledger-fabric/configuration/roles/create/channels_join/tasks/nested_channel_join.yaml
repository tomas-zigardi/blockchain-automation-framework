############################################################################################
# This task initiates the nested join channel role to internally join the peers in various permutations

# Check or wait for the create channel job to complete
- name: "Check create channel job is done"
  k8s_facts:
    kind: Job
    namespace: "{{ participant.name | lower}}-net"
    kubeconfig: "{{ org.k8s.config_file }}"
    context: "{{ org.k8s.context }}"
    label_selectors:
      - app = createchannel-{{ channel_name }}
  when: participant.type == 'creator'
  register: get_peer
  until: (1 in get_peer|json_query('resources[*].status.succeeded'))
  retries: "{{ network.env.retry_count}}"
  delay: 40

# Creeate the join channel value file for each participating peer
- name: "join channel {{ channel_name }}"
  include_role:
    name: helm_component
  vars:
    name: "{{ participant.name }}"
    type: "join_channel_job"    
    component_name: "join-{{ channel_name }}-{{ participant.name }}-{{ peer.name }}"
    peer_name: "{{ peer.name }}"
    component_ns: "{{ participant.name | lower}}-net"
    git_url: "{{ org.gitops.git_ssh }}"
    git_branch: "{{ org.gitops.branch }}"
    charts_dir: "{{ org.gitops.chart_source }}"
    vault: "{{ org.vault }}"
    values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ org.name | lower }}"
  loop: "{{ participant.peers }}"
  loop_control:
    loop_var: peer

#Git Push : Pushes the above generated files to git directory 
- name: Git Push
  include_role: 
    name: "{{ playbook_dir }}/../../shared/configuration/roles/git_push"
  vars:
    GIT_DIR: "{{ playbook_dir }}/../../../"
    GIT_REPO: "{{ org.gitops.git_push_url }}"
    GIT_USERNAME: "{{ org.gitops.username }}"
    GIT_PASSWORD: "{{ org.gitops.password }}"
    GIT_BRANCH: "{{ org.gitops.branch }}"
    GIT_RESET_PATH: "platforms/hyperledger-fabric/configuration"
    msg: "Pushing channel-join files"
