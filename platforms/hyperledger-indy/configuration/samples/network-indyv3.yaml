---
# This is a sample configuration file for hyperledger indy which can reused for a sample indy network of 9 nodes.
# It has 3 organizations:
# 1. organization "authority" with 1 trustee
# 2. organization "provider" with 1 trustee, 2 stewards and 1 endorser
# 3. organization "partner" with 1 trustee, 2 stewards and 1 endorser

network:
  # Network level configuration specifies the attributes required for each organization
  # to join an existing network.
  type: indy
  version: 1.9.2

  #Environment section for Kubernetes setup
  env:
    type: "env_type"              # tag for the environment. Important to run multiple flux on single cluster
    proxy: ambassador               # value has to be 'ambassador' as 'haproxy' has not been implemented for Indy
    retry_count: 20                 # Retry count for the checks
    external_dns: disabled           # Should be enabled if using external-dns for automatic route configuration

  # Docker registry details where images are stored. This will be used to create k8s secrets
  # Please ensure all required images are built and stored in this registry.
  # Do not check-in docker_password.
  docker:
    url: "docker_url"
    username: "docker_username"
    password: "docker_password"

  # It's used as the Indy network name (has impact e.g. on paths where the Indy nodes look for crypto files on their local filesystem)
  name: baf 

  # Informatio about pool transaction genesis and domain transactions genesis
  genesis:
    state: absent
    pool: genesis/pool_transactions_genesis
    domain: domain/domain_transactions_genesis

  # Allows specification of one or many organizations that will be connecting to a network.
  organizations:
    # Specification for the 1st organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: authority
      type: peer
      cloud_provider: aws-baremetal             # Currently eks is not supported due to aws_authenticator

      aws:
        access_key: "aws_access_key"            # AWS Access key
        secret_key: "aws_secret_key"            # AWS Secret key
        encryption_key: "encryption_key_id"     # AWS encryption key. If present, it's used as the KMS key id for K8S storage class encryption.
        zone: "availability_zone"               # AWS availability zone
        region: "region"                        # AWS region
        publicIps: []                           # List of all public IP addresses of each availability zone

      # Kubernetes cluster deployment variables. The config file path has to be provided in case
      # the cluster has already been created.
      k8s:
        config_file: "cluster_config"
        context: "kubernetes-admin@kubernetes"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "vault_addr"
        root_token: "vault_root_token"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_ssh: "gitops_ssh_url"                   # Gitops ssh url for flux value files like "ssh://git@github.com:hyperledger-labs/blockchain-automation-framework.git"
        branch: "gitops_branch"                     # Git branch where release is being made
        release_dir: "gitops_release_dir"           # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "gitops_charts"               # Relative Path where the Helm charts are stored in Git repo
        git_push_url: "gitops_push_url"             # Gitops https URL for git push like "github.com/hyperledger-labs/blockchain-automation-framework.git"
        username: "git_username"                    # Git Service user who has rights to check-in in all branches
        password: "git_password"                    # Git Server user password
        email: "git_email"                          # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has trustee
      services:
        trustees:
        - trustee:
          name: authority-trustee
          genesis: true

    # Specification for the 2nd organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: provider
      type: peer
      cloud_provider: aws-baremetal             # Currently eks is not supported due to aws_authenticator

      aws:
        access_key: "aws_access_key"            # AWS Access key
        secret_key: "aws_secret_key"            # AWS Secret key
        encryption_key: "encryption_key_id"     # AWS encryption key. If present, it's used as the KMS key id for K8S storage class encryption.
        zone: "availability_zone"               # AWS availability zone
        region: "region"                        # AWS region
        publicIps: ["3.221.78.194"]             # List of all public IP addresses of each availability zone

      # Kubernetes cluster deployment variables. The config file path has to be provided in case
      # the cluster has already been created.
      k8s:
        config_file: "cluster_config"
        context: "kubernetes-admin@kubernetes"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "vault_addr"
        root_token: "vault_root_token"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_ssh: "gitops_ssh_url"                   # Gitops ssh url for flux value files like "ssh://git@github.com:hyperledger-labs/blockchain-automation-framework.git"
        branch: "gitops_branch"                     # Git branch where release is being made
        release_dir: "gitops_release_dir"           # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "gitops_charts"               # Relative Path where the Helm charts are stored in Git repo
        git_push_url: "gitops_push_url"             # Gitops https URL for git push like "github.com/hyperledger-labs/blockchain-automation-framework.git"
        username: "git_username"                    # Git Service user who has rights to check-in in all branches
        password: "git_password"                    # Git Server user password
        email: "git_email"                          # Email to use in git config
        private_key: "path_to_private_key"          # Path to private key file which has write-access to the git repo

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has trustee, 2 stewards and endoorser
      services:
        trustees:
        - trustee:
          name: provider-trustee
          genesis: true
        stewards:
        - steward:
          name: provider-steward-1
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194
          node:
            port: 9711
            targetPort: 9711
            ambassador: 9711        # Port for ambassador service
          client:
            port: 9712
            targetPort: 9712
            ambassador: 9712        # Port for ambassador service
        - steward:
          name: provider-steward-2
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194
          node:
            port: 9721
            targetPort: 9721
            ambassador: 9721        # Port for ambassador service
          client:
            port: 9722
            targetPort: 9722
            ambassador: 9722        # Port for ambassador service
        endorsers:
        - endorser:
          name: provider-endorser
          full_name: Some Decentralized Identity Mobile Services Provider
          avatar: https://provider.com/avatar.png
          public_endpoint: https://provider.com/public

    # Specification for the 3rd organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: partner
      type: peer
      cloud_provider: aws-baremetal             # Currently eks is not supported due to aws_authenticator

      aws:
        access_key: "aws_access_key"            # AWS Access key
        secret_key: "aws_secret_key"            # AWS Secret key
        encryption_key: "encryption_key_id"     # AWS encryption key. If present, it's used as the KMS key id for K8S storage class encryption.
        zone: "availability_zone"               # AWS availability zone
        region: "region"                        # AWS region
        publicIps: ["3.221.78.194"]             # List of all public IP addresses of each availability zone

      # Kubernetes cluster deployment variables. The config file path has to be provided in case
      # the cluster has already been created.
      k8s:
        config_file: "cluster_config"
        context: "kubernetes-admin@kubernetes"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "vault_addr"
        root_token: "vault_root_token"

      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_password
      gitops:
        git_ssh: "gitops_ssh_url"                 # Gitops ssh url for flux value files like "ssh://git@github.com:hyperledger-labs/blockchain-automation-framework.git"
        branch: "gitops_branch"                   # Git branch where release is being made
        release_dir: "gitops_release_dir"         # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "gitops_charts"             # Relative Path where the Helm charts are stored in Git repo
        git_push_url: "gitops_push_url"           # Gitops https URL for git push like "github.com/hyperledger-labs/blockchain-automation-framework.git"
        username: "git_username"                  # Git Service user who has rights to check-in in all branches
        password: "git_password"                  # Git Server user password
        email: "git_email"                        # Email to use in git config
        private_key: "path_to_private_key"        # Path to private key file which has write-access to the git repo

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has trustee, 2 stewards and endoorser
      services:
        trustees:
        - trustee:
          name: partner-trustee
          genesis: true
        stewards:
        - steward:
          name: partner-steward-1
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194
          node:
            port: 9731
            targetPort: 9731
            ambassador: 9731            # Port for ambassador service
          client:
            port: 9732
            targetPort: 9732
            ambassador: 9732            # Port for ambassador service
        - steward:
          name: partner-steward-2
          type: VALIDATOR
          genesis: true
          publicIp: 3.221.78.194
          node:
            port: 9741
            targetPort: 9741
            ambassador: 9741            # Port for ambassador service
          client:
            port: 9742
            targetPort: 9742
            ambassador: 9742            # Port for ambassador service
        endorsers:
        - endorser:
          name: partner-endorser
          full_name: Some Decentralized Identity Mobile Services Partner
          avatar: https://partner.com/avatar.png
          public_endpoint: https://partner.com/public