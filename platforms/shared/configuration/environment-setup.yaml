---
#######################################
# Playbook to setup the environment for running the Blockchain Automation Framework configurations
#  - checks and installs kubectl, helm and vault clients
#  - If cloud platform is AWS, checks and installs aws-cli and aws-authenticator
#######################################
  - hosts: ansible_provisioners
    gather_facts: yes
    tasks:
    - include_role:
        name:  setup/kubectl
      vars:
        kubectl:
          version: "1.14.2"
          os: "{{ install_os }}"
          arch: "{{ install_arch }}"
          bin_directory: "{{ bin_install_dir }}"
          checksum: "sha512:a4394293cecdc177db7d3ef29f9d9efb7f922d193b00d83fa17c847e2aa1cd1c38eff1f4233843fededf15d99f7c434bf701d84b93a3cb834a4699cbddf02385"
      with_items: "{{ network.organizations }}"
    - include_role:
        name:  setup/helm
      vars:
        helm:
          version: "v2.14.1"
          os: "{{ install_os }}"
          arch: "{{ install_arch }}"
          bin_directory: "{{ bin_install_dir }}"
          checksum: ""
      with_items: "{{ network.organizations }}"
    - include_role:
        name:  setup/vault
      vars:
        vault:
          version: "1.0.1"
          os: "{{ install_os }}"
          arch: "{{ install_arch }}"
          bin_directory: "{{ bin_install_dir }}"
          checksum: ""
        with_items: "{{ network.organizations }}"
    - include_role:
        name: setup/aws-cli
      vars:
        aws_cli:
          bin_directory: "{{ bin_install_dir }}"
        aws_access_key: "{{ item.aws.access_key }}"
        aws_secret_key: "{{ item.aws.secret_key }}"
      with_items: "{{ network.organizations }}"
      when: "item.cloud_provider == 'aws' or item.cloud_provider == 'aws-baremetal'"
    - include_role:
        name: setup/aws-auth
      vars:
        aws_authenticator:
          version: "1.10.3"
          release_date:  "2018-07-26"
          os: "{{ install_os }}"
          arch: "{{ install_arch }}"
          bin_directory: "{{ bin_install_dir }}"
          checksum: ""
        kubeconfig_path: "{{ item.k8s.config_file }}"
        kubecontext: "{{ item.k8s.context }}"
      with_items: "{{ network.organizations }}"
      when: "item.cloud_provider == 'aws'"
    - include_role:
        name: setup/tiller
      vars:
        kubeconfig_path: "{{ data.k8s.config_file }}"
        kubecontext: "{{ data.k8s.context }}"
      with_items: "{{ network.organizations }}"
      loop_control:
        loop_var: data
    vars: #These variables can be overriden from the command line
      privilege_escalate: false           #Default to NOT escalate to root privledges
      install_os: "linux"                 #Default to linux OS
      install_arch:  "amd64"              #Default to amd64 architecture
      bin_install_dir:  "~/bin"            #Default to ~/bin install directory for binaries
