#############################################################################################
# This role saves the crypto from Vault into ansible_provisioner
#############################################################################################

# Ensure admincerts directory is present in build
- name: Ensure directory exists
  file:
    path: "{{ cert_path }}"
    recurse: yes
    state: directory

# Save the cert file
- name: Save cert
  local_action: copy content="{{ vault_output['data'].ambassadorcrt | b64decode }}" dest="{{ cert_path }}/ambassador.crt"
  when: type == "ambassador"
# Save the key file
- name: Save key
  local_action: copy content="{{ vault_output['data'].ambassadorkey | b64decode }}" dest="{{ cert_path }}/ambassador.key"
  when: type == "ambassador"

- name: Save root keychain
  local_action: copy content="{{ vault_output['data'].rootca | b64decode }}" dest="{{ cert_path }}/rootca.jks"
  when: type == "rootca"

- name: Extracting root certificate from .jks
  shell: |
    cd {{cert_path}}
    eval "keytool -importkeystore -srckeystore rootca.jks -destkeystore rootca.p12 -srcalias rootca -srcstoretype jks -deststoretype pkcs12 -srcstorepass 'quorum' -deststorepass 'quorum'"
    eval "openssl pkcs12 -in rootca.p12 -nokeys -out rootca.pem -passin pass:'quorum' -passout pass:'quorum'"
    eval "openssl pkcs12 -in rootca.p12 -nodes -nocerts -out rootca.key -passin pass:'quorum' -passout pass:'quorum'"
  when: type == 'rootca'

